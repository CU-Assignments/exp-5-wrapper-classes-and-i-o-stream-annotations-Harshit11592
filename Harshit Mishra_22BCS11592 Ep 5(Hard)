import java.io.*; 
import java.util.ArrayList; 
import java.util.List; 
import java.util.Scanner; 
class Employee implements Serializable { 
private static final long serialVersionUID = 1L; 
private int id; 
private String name, designation; 
private double salary; 
public Employee(int id, String name, String designation, double salary) { 
 
        this.id = id; 
        this.name = name; 
        this.designation = designation; 
        this.salary = salary; 
    } 
    public void display() { 
        System.out.println("ID: " + id + ", Name: " + name + ", Designation: " + 
designation + ", Salary: " + salary); 
    } 
} 
public class EmployeeManagementApp { 
    private static final String FILE_NAME = "employees.ser"; 
    public static void main(String[] args) { 
        Scanner scanner = new Scanner(System.in); 
        List<Employee> employees = loadEmployees(); 
        while (true) { 
            System.out.println("\n1. Add Employee\n2. Display All\n3. Exit"); 
            System.out.print("Choose an option: "); 
            int choice = scanner.nextInt(); 
 
            scanner.nextLine();  
            switch (choice) { 
                case 1: 
                    System.out.print("Enter Employee ID: "); 
                    int id = scanner.nextInt(); 
                    scanner.nextLine(); 
                    System.out.print("Enter Name: "); 
                    String name = scanner.nextLine(); 
                    System.out.print("Enter Designation: "); 
                    String designation = scanner.nextLine(); 
                    System.out.print("Enter Salary: "); 
                    double salary = scanner.nextDouble(); 
                    employees.add(new Employee(id, name, designation, salary)); 
                    saveEmployees(employees); 
                    System.out.println("Employee added successfully!"); 
                    break; 
                case 2: 
                    if (employees.isEmpty()) { 
                        System.out.println("No employees found."); 
 
                    } else { 
                        System.out.println("\nEmployee Details:"); 
                        for (Employee emp : employees) emp.display(); 
                    } 
                    break; 
                case 3: 
                    System.out.println("Exiting..."); 
                    scanner.close(); 
                    return; 
                default: 
                    System.out.println("Invalid choice! Try again."); 
            } 
        } 
    } 
    private static List<Employee> loadEmployees() { 
        File file = new File(FILE_NAME); 
        if (!file.exists()) return new ArrayList<>(); 
 
        try (ObjectInputStream in = new ObjectInputStream(new 
FileInputStream(FILE_NAME))) { 
            return (List<Employee>) in.readObject(); 
        } catch (IOException | ClassNotFoundException e) { 
            return new ArrayList<>(); 
        } 
    } 
    private static void saveEmployees(List<Employee> employees) { 
        try (ObjectOutputStream out = new ObjectOutputStream(new 
FileOutputStream(FILE_NAME))) { 
            out.writeObject(employees); 
        } catch (IOException e) { 
            System.out.println("Error saving employees."); 
        } 
    } 
}
